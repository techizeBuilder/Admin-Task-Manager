You are an expert React + TypeScript + shadcn/ui form builder.  
I want you to generate an **Approval Task Form** for my task management app.  
This form should follow **clean code, modularity, and maintainability**.  
Each task type (Regular, Recurring, Milestone, Approval) has its **own component**.  
This prompt is for the **Approval Task Form** only.  

### Functional Requirements:
- **Task Name (required)**: Input field, max 80 chars, live counter.
- **Description (optional)**: Rich text editor (support bold, bullets, links).
- **Due Date (required)**: Date picker. Must be ≥ today.  
- **Approvers (required)**: Multi-select searchable dropdown.  
  - Validation: must select at least one approver.  
  - Ordering control for sequential mode (drag/drop or numbered list).
- **Approval Mode (required)**: Radio → `Any One`, `All Must Approve`, `Sequential`.  
  - If `Sequential`, require approver order.
- **Auto-Approval (optional)**: Toggle ON/OFF.  
  - If ON → Number input: “Auto-approve after X days past due date”.  
  - Validation: X ≥ 0.
- **Priority (optional)**: Dropdown → Low, Medium, High, Critical. Default = Medium.  
- **Assigned To (required)**: Single-select dropdown. Default = Creator/self.  
- **Collaborators (optional)**: Multi-select chips. Not approvers, just notified.
- **Visibility (required)**: Toggle → Private/Public.  
- **Restrictions**:  
  - Task creator cannot be auto-added as approver unless explicitly chosen.  
  - Approvers cannot be changed after first action (lock with tooltip).  
  - Cannot revert Approval Task back to normal once created.  

### UI / UX Requirements:
- Use ✅❌ icons (lucide-react or emoji) to distinguish approval tasks.  
- Inline validations:  
  - Empty task name → “Task name is required.”  
  - No approver → “At least one approver must be assigned.”  
  - Due date < today → “Approval due date must be today or later.”  
  - Sequential mode without order → “Define the order for sequential approvals.”  
- Show info tooltip on `Approval Mode` field explaining behaviors.  
- Form buttons at bottom-right: **[Save] [Cancel]**.  
- Once saved → approvers will see inline Approve/Reject/Comment actions.  

### Output Requirements:
- Generate a clean, reusable React component named `ApprovalTaskForm.tsx`.  
- Use **shadcn/ui** form primitives (Form, Input, Select, Toggle, DatePicker, Textarea).  
- Use **lucide-react icons** for task/approval indicators.  
- Validation handled by **react-hook-form + zod**.  
- Component should be modular and easy to extend in the future.  
